[package]
name = "c09_ai"
version = "0.3.0"
edition = "2024"
resolver = "3"
description = "AI and Machine Learning with Rust 1.90 - 人工智能与机器学习 (2025 Edition)"
authors = ["Rust AI Team"]
license = "MIT"
repository = "https://github.com/rust-lang/c09_ai"
keywords = ["ai", "machine-learning", "deep-learning", "neural-networks", "nlp", "computer-vision", "llm", "transformers", "rust-189", "candle", "burn", "tch", "dfdx"]
categories = ["science", "machine-learning", "algorithms"]
rust-version = "1.90"

# AI/ML CPU指令集优化配置在根Cargo.toml中统一管理

[dependencies]
# 核心依赖 - 使用工作区统一版本
serde = { workspace = true }
tokio = { workspace = true }
rand = { workspace = true }
anyhow = { workspace = true }
thiserror = { workspace = true }
uuid = { workspace = true }

# 数学和数值计算 - 2025年9月最新版本
# ndarray: 多维数组库，支持向量化操作和线性代数
ndarray = { version = "0.16.1", features = ["serde", "rayon", "approx"] }
# nalgebra: 线性代数库，提供矩阵和向量操作
nalgebra = "0.34.1"
# num-traits: 数值类型特征定义
num-traits = "0.2.19"
# num-complex: 复数类型支持
num-complex = "0.4.6"
# approx: 浮点数近似比较
approx = "0.5.1"
# statrs: 统计函数库
statrs = "0.18.0"

# 机器学习核心库 - 2025年10月15日最新版本
# linfa: Rust机器学习工具包，提供多种算法实现
linfa = { version = "0.7.1", optional = true }
# smartcore: 智能核心机器学习库
smartcore = { version = "0.4.2", optional = true }
# candle-core: 工作区统一版本的candle核心库
candle-core = { workspace = true, optional = true }
# candle-nn: 工作区统一版本的candle神经网络库
candle-nn = { workspace = true, optional = true }
# candle-transformers: 工作区统一版本的candle transformer库
candle-transformers = { workspace = true, optional = true }
# candle-datasets: candle数据集处理库
candle-datasets = { version = "0.9.1", optional = true }
# candle-kernels: candle内核函数库
candle-kernels = { version = "0.9.1", optional = true }

# 深度学习框架 - 2025年最新版本
# burn = { version = "0.13", optional = true }  # 暂时禁用以避免工作区冲突
tch = { workspace = true, optional = true }
dfdx = { version = "0.13.0", optional = true }

# 自然语言处理 - 2025年10月15日最新版本
# tokenizers: 文本分词器，支持多种预训练模型
tokenizers = { version = "0.22.1", optional = true }
# rust-bert: BERT模型的Rust实现
rust-bert = { version = "0.23.0", optional = true }
# llm-chain: 大语言模型链式处理框架
llm-chain = { version = "0.13.0", optional = true }
# llm-chain-openai: OpenAI API集成
llm-chain-openai = { version = "0.13.0", optional = true }
# llm-chain-llama: LLaMA模型集成
llm-chain-llama = { version = "0.13.0", optional = true }
# llm-chain-local: 本地模型运行支持
llm-chain-local = { version = "0.12.3", optional = true }

# 2025年最新深度学习框架 - Burn
# burn = { workspace = true, optional = true }  # 暂时禁用，存在版本兼容性问题
# burn-ndarray = { workspace = true, optional = true }  # 暂时禁用，存在版本兼容性问题
# burn-tch 暂时禁用，与现有tch版本冲突

# 计算机视觉 - 2025年10月15日最新版本
opencv = { version = "0.95.1", optional = true }
image = { version = "0.25.8", optional = true }
imageproc = { version = "0.25.0", optional = true }

# 数据处理 - 2025年10月15日最新版本
# polars: 高性能数据框库，类似pandas但更快速
polars = { version = "0.50.0", features = ["lazy", "temporal", "strings", "dtype-categorical", "dtype-struct"], optional = true }
# datafusion: 分布式查询引擎
datafusion = { version = "49.0.2", optional = true }
# arrow: Apache Arrow的Rust实现，用于列式数据存储
arrow = { version = "56.1.0", optional = true }

# 向量数据库和搜索 - 2025年最新版本
qdrant-client = { version = "1.15.0", optional = true }
tantivy = { version = "0.25.0", optional = true }
hnsw_rs = { version = "0.3.2", optional = true }
# 新增：语言检测和文本处理
whatlang = { version = "0.16.1", optional = true }
rust-stemmers = { version = "1.2.0", optional = true }

# 网络和API - 使用工作区统一版本
# reqwest: 工作区统一版本的HTTP客户端
reqwest = { workspace = true }
# async-openai: 异步OpenAI API客户端
async-openai = { version = "0.29.3", optional = true }
# openai: OpenAI API的同步客户端
openai = { version = "1.1.1", optional = true }

# 序列化和配置 - 2025年最新版本
toml = { workspace = true }
serde_yaml = { workspace = true }
bincode = { workspace = true }
ron = "0.11.0"
serde_json = { workspace = true }

# 日志和监控 - 使用工作区统一版本
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
metrics = { workspace = true, optional = true }
metrics-exporter-prometheus = { workspace = true, optional = true }

# 并发和性能 - 统一使用工作区版本
rayon = { workspace = true }
crossbeam = { workspace = true }
dashmap = { workspace = true }
parking_lot = { workspace = true }
tokio-util = { workspace = true }

# 测试和基准测试 - 使用工作区/可用最新
criterion = { workspace = true, features = ["html_reports"] }
proptest = { workspace = true }
tempfile = { workspace = true }

# AI 特定依赖 - 2025年最新版本
# 大语言模型支持
llama-cpp-2 = { version = "0.1.122", optional = true }
# 图神经网络
petgraph = { workspace = true, optional = true }
# 时间序列 - 使用工作区统一版本
# 配置管理 - 使用可用版本
config = { workspace = true }
# 错误处理增强
miette = "7.6.0"
# 内存管理
bumpalo = "3.19.0"
# 新增：安全和加密
aes-gcm = { version = "0.10.3", optional = true }
ring = { version = "0.17.14", optional = true }

# 2025年最新AI/ML库 - Rust 1.90优化
# Faer-rs - 高性能线性代数库
faer = { workspace = true, optional = true }
# 其他库暂时注释，等待实际发布
# Orch - 语言模型编排库
# orch = { workspace = true, optional = true }
# Similari - 对象跟踪和相似性搜索
# similari = { workspace = true, optional = true }
# Kornia-rs - 3D计算机视觉高性能库
# kornia-rs = { workspace = true, optional = true }
# Thistle - 高性能向量数据库
# thistle = { workspace = true, optional = true }
# ad-trait - 自动微分库
# ad_trait = { workspace = true, optional = true }
# 异步运行时增强 - 使用工作区版本
futures = { workspace = true }
async-trait = { workspace = true }

# Web框架和HTTP服务器 - 2025年9月最新版本
# axum: 现代异步web框架，基于tokio
axum = { version = "0.8.4", features = ["macros", "tracing"], optional = true }
# tower: 中间件和服务抽象层
tower = { version = "0.5.2", features = ["full"], optional = true }
# tower-http: HTTP中间件集合
tower-http = { version = "0.6.6", features = ["cors", "trace", "compression-br", "timeout", "limit"], optional = true }
# hyper: 底层HTTP库
hyper = { version = "1.7.0", features = ["full"], optional = true }

# 序列化和反序列化 (已在上面定义)

# UUID生成 (已在上面定义)

# 时间处理
chrono = { workspace = true, features = ["serde"] }
# 加密和哈希 - 2025年10月15日最新版本
# sha2: SHA-2哈希算法实现
sha2 = "0.10.9"
# argon2: Argon2密码哈希算法
argon2 = "0.5.3"
# md5: MD5哈希算法实现
md5 = "0.7.0"
# regex: 正则表达式库
regex = "1.11.2"

# 数据库 (暂时禁用，存在版本冲突)
# sqlx = { version = "0.7", features = ["runtime-tokio", "macros", "postgres", "mysql", "chrono", "uuid", "json"], optional = true }

# 缓存 - 2025年10月15日最新版本
# redis: Redis客户端库，支持异步操作
redis = { version = "0.32.5", features = ["tokio-comp"], optional = true }

# 日志
env_logger = "0.11"
log = "0.4"

# 新增：2025年最新AI特性
# 强化学习 (暂时禁用，存在pyo3安全漏洞)
# gymnasium-rs = { version = "0.1.0", optional = true }

[dev-dependencies]
tempfile = { workspace = true }
proptest = { workspace = true }
tokio-test = { workspace = true }

[features]
# 将默认特性限制为纯 CPU 传统 ML，避免 workspace 级别的冲突
default = ["basic-ai"]
# 基础 AI 功能
basic-ai = ["dep:linfa", "dep:smartcore"]
# 深度学习框架（均为可选且非默认启用）
candle = ["dep:candle-core", "dep:candle-nn", "dep:candle-transformers", "dep:candle-datasets"]
# burn = ["dep:burn"]  # 暂时禁用以避免工作区冲突
tch = ["dep:tch"]
dfdx = ["dep:dfdx"]
# GPU 支持
gpu = ["candle", "tch"]
# Metal 支持 (macOS GPU)
metal = []
# CUDA 支持 (NVIDIA GPU)
cuda = []
# 大语言模型
llm = ["dep:llm-chain", "dep:llm-chain-openai", "dep:llm-chain-llama", "dep:llm-chain-local", "dep:llama-cpp-2"]
# OpenAI 集成
openai = ["dep:async-openai", "dep:openai", "dep:llm-chain-openai"]
# 计算机视觉
vision = ["dep:opencv", "dep:image", "dep:imageproc"]
# 自然语言处理
nlp = ["dep:rust-bert", "dep:tokenizers", "dep:llm-chain", "dep:whatlang", "dep:rust-stemmers"]
# 数据处理
data = ["dep:polars", "dep:datafusion", "dep:arrow"]
# 向量搜索
search = ["dep:qdrant-client", "dep:tantivy", "dep:hnsw_rs"]
# 模型管理与管道控制
management = []
# 强化学习 (暂时禁用，存在pyo3安全漏洞)
# reinforcement = ["dep:gymnasium-rs"]
# 图神经网络
gnn = ["dep:petgraph"]
# 时间序列
timeseries = []
# 监控和指标
monitoring = ["dep:metrics", "dep:metrics-exporter-prometheus"]
# 安全和加密
security = ["dep:aes-gcm", "dep:ring"]
# 文本处理增强
text-processing = ["dep:whatlang", "dep:rust-stemmers"]
# 2025年最新AI特性 - Rust 1.90优化
linear-algebra-advanced = ["dep:faer"]
# 其他特性暂时注释，等待库发布
# orch-integration = ["dep:orch"]
# computer-vision-advanced = ["dep:similari", "dep:kornia-rs"]
# automatic-differentiation = ["dep:ad_trait"]
# vector-database-advanced = ["dep:thistle"]
# 3D计算机视觉
# computer-vision-3d = ["dep:kornia-rs"]
# 对象跟踪
# object-tracking = ["dep:similari"]
# REST API服务
api-server = ["dep:axum", "dep:tower", "dep:tower-http", "dep:hyper"]
# 数据库支持 (暂时禁用，存在版本冲突)
# database = ["dep:sqlx"]
# 缓存支持
cache = ["dep:redis"]
# 多模态AI
multimodal = []
# 联邦学习
federated = []
# 边缘AI
edge = []
# 量子机器学习
quantum = []
# 2025年最新深度学习框架
# burn = ["dep:burn", "dep:burn-ndarray"]  # 暂时禁用，存在版本兼容性问题

# 完整功能（注意：这会拉入多种后端及其系统依赖）
full = ["candle", "dfdx", "llm", "vision", "nlp", "data", "search", "gnn", "timeseries", "monitoring", "multimodal", "security", "text-processing", "linear-algebra-advanced"]

[[bench]]
name = "neural_network_bench"
harness = false

[[bench]]
name = "ml_algorithms_bench"
harness = false

[lib]
name = "c19_ai"
path = "src/lib.rs"

[[example]]
name = "basic_ml"
path = "examples/basic_ml.rs"

[[example]]
name = "deep_learning"
path = "examples/deep_learning.rs"
required-features = ["candle", "burn", "dfdx"]

[[example]]
name = "nlp_pipeline"
path = "examples/nlp_pipeline.rs"
required-features = ["nlp"]

[[example]]
name = "computer_vision"
path = "examples/computer_vision.rs"
required-features = ["vision"]

[[example]]
name = "llm_chat"
path = "examples/llm_chat.rs"
required-features = ["llm"]

[[example]]
name = "vector_search"
path = "examples/vector_search.rs"
required-features = ["search", "data"]

[[example]]
name = "diffusion_model"
path = "examples/diffusion_model.rs"
required-features = ["candle"]

# [[example]]
# name = "reinforcement_learning"
# path = "examples/reinforcement_learning.rs"
# required-features = ["reinforcement"]  # 暂时禁用，存在pyo3安全漏洞

[[example]]
name = "graph_neural_network"
path = "examples/graph_neural_network.rs"
required-features = ["gnn"]

[[example]]
name = "time_series_forecasting"
path = "examples/time_series_forecasting.rs"
required-features = ["timeseries"]

[[example]]
name = "multimodal_ai"
path = "examples/multimodal_ai.rs"
required-features = ["multimodal"]

[[example]]
name = "federated_learning"
path = "examples/federated_learning.rs"
required-features = ["federated"]

[[example]]
name = "edge_ai"
path = "examples/edge_ai.rs"
required-features = ["edge"]

[[example]]
name = "quantum_ml"
path = "examples/quantum_ml.rs"
required-features = ["quantum"]

[[example]]
name = "latest_2025_features"
path = "examples/latest_2025_features.rs"
required-features = ["candle", "nlp", "data", "security"]

[[example]]
name = "api_server"
path = "examples/api_server.rs"
required-features = ["api-server"]

[[example]]
name = "rust_190_ai_features"
path = "examples/rust_190_ai_features.rs"
required-features = ["candle", "linear-algebra-advanced"]

[[example]]
name = "wasm_ai_inference"
path = "examples/wasm_ai_inference.rs"
required-features = []

[[example]]
name = "multimodal_ai_processing"
path = "examples/multimodal_ai_processing.rs"
required-features = []

[[example]]
name = "agentic_web_architecture"
path = "examples/agentic_web_architecture.rs"
required-features = []

[[example]]
name = "performance_optimization"
path = "examples/performance_optimization.rs"
required-features = []